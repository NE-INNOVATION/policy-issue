name: .NET Core

on:
  push:
    branches: [ master,dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Set variables
      id: vars
      run: |
          echo ::set-output name=repo_name::$(echo quay.io/neinnovation/policyissue)
          echo ::set-output name=repo::$(echo ${GITHUB_REPOSITORY})
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo ::set-output name=branch::${GITHUB_REF#refs/heads/}
         #echo ::set-output name=image_name::$(echo ${secrets.docker_repo_url}:${steps.vars.output.branch}-${steps.vars.output.sha_short})
    - name: Login to Podman
      id: login
      run:  |
         echo ${{ steps.vars.outputs.repo_name }}
         #podman login quay.io -u ${{ secrets.docker_username }} -p ${{ secrets.docker_password }}
    - name: Build Image using Podman
      run: |
         #podman build . -t ${{ steps.vars.output.repo_name }}:${{ steps.vars.output.branch }}${{ steps.vars.output.sha_short }}
    - name: Push Image to Github Registry
      run: |
          #podman push ${{ steps.vars.output.repo_name }}:${{ steps.vars.output.branch }}${{ steps.vars.output.sha_short }}
    - name: Scan Image
      uses: Azure/container-scan@v0
      continue-on-error: true
      with:
        image-name: ${{ steps.vars.output.repo_name }}:${{ steps.vars.output.branch }}${{ steps.vars.output.sha_short }}
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_password }}
        token: ${{ github.token }}
        severity-threshold: HIGH
        run-quality-checks: false
      
